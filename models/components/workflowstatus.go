// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type WorkflowStatus string

const (
	WorkflowStatusInProgress     WorkflowStatus = "InProgress"
	WorkflowStatusFailure        WorkflowStatus = "Failure"
	WorkflowStatusSuccess        WorkflowStatus = "Success"
	WorkflowStatusPartialSuccess WorkflowStatus = "PartialSuccess"
	WorkflowStatusResultsExpired WorkflowStatus = "ResultsExpired"
)

func (e WorkflowStatus) ToPointer() *WorkflowStatus {
	return &e
}
func (e *WorkflowStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "InProgress":
		fallthrough
	case "Failure":
		fallthrough
	case "Success":
		fallthrough
	case "PartialSuccess":
		fallthrough
	case "ResultsExpired":
		*e = WorkflowStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WorkflowStatus: %v", v)
	}
}
