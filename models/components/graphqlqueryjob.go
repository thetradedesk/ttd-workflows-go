// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"time"
	"ttd-workflows/internal/utils"
)

// GraphQlQueryJob - This is the response model that mirrors the GQL bulkjob
type GraphQlQueryJob struct {
	// The ID of the job.
	ID int64 `json:"id"`
	// The UTC data and time that the job completed.
	CompletedAt *time.Time `json:"completedAt,omitempty"`
	// The job completion percentage.
	CompletionPercentage *float32 `json:"completionPercentage,omitempty"`
	// Time of creation for that bulk job in UTC.
	CreatedAt time.Time     `json:"createdAt"`
	Status    BulkJobStatus `json:"status"`
	// The URL from which the job result can be downloaded.
	URL *string `json:"url,omitempty"`
	// The raw job result if the response is less than or equal to 20MB in size.
	// If the job result is larger than 20MB, then null is returned.
	RawResult *string `json:"rawResult,omitempty"`
	// If the GQL requests within the job hard failed (such as from an authorization error or an internal server error), the causes encountered during execution
	QueryGqlErrors []string `json:"queryGqlErrors,omitempty"`
	// Errors encountered while executing the job
	RuntimeErrors []string `json:"runtimeErrors"`
}

func (g GraphQlQueryJob) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GraphQlQueryJob) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *GraphQlQueryJob) GetID() int64 {
	if o == nil {
		return 0
	}
	return o.ID
}

func (o *GraphQlQueryJob) GetCompletedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CompletedAt
}

func (o *GraphQlQueryJob) GetCompletionPercentage() *float32 {
	if o == nil {
		return nil
	}
	return o.CompletionPercentage
}

func (o *GraphQlQueryJob) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *GraphQlQueryJob) GetStatus() BulkJobStatus {
	if o == nil {
		return BulkJobStatus("")
	}
	return o.Status
}

func (o *GraphQlQueryJob) GetURL() *string {
	if o == nil {
		return nil
	}
	return o.URL
}

func (o *GraphQlQueryJob) GetRawResult() *string {
	if o == nil {
		return nil
	}
	return o.RawResult
}

func (o *GraphQlQueryJob) GetQueryGqlErrors() []string {
	if o == nil {
		return nil
	}
	return o.QueryGqlErrors
}

func (o *GraphQlQueryJob) GetRuntimeErrors() []string {
	if o == nil {
		return nil
	}
	return o.RuntimeErrors
}
