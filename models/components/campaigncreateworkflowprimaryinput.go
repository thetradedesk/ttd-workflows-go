// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/thetradedesk/ttd-workflows-go/internal/utils"
	"time"
)

type CampaignCreateWorkflowPrimaryInput struct {
	Description                        *string                                                  `json:"description,omitempty"`
	CampaignGroupID                    *int64                                                   `json:"campaignGroupId,omitempty"`
	TimeZone                           *string                                                  `json:"timeZone,omitempty"`
	CustomCPAClickWeight               *float64                                                 `json:"customCPAClickWeight,omitempty"`
	CustomCPAViewthroughWeight         *float64                                                 `json:"customCPAViewthroughWeight,omitempty"`
	CustomCPAType                      *CustomCPAType                                           `json:"customCPAType,omitempty"`
	ImpressionsOnlyBudgetingCpm        *float64                                                 `json:"impressionsOnlyBudgetingCpm,omitempty"`
	Budget                             *CampaignWorkflowBudgetInput                             `json:"budget,omitempty"`
	EndDateInUtc                       *time.Time                                               `json:"endDateInUtc,omitempty"`
	SeedID                             *string                                                  `json:"seedId,omitempty"`
	CampaignConversionReportingColumns []CampaignWorkflowCampaignConversionReportingColumnInput `json:"campaignConversionReportingColumns,omitempty"`
	AdvertiserID                       string                                                   `json:"advertiserId"`
	Name                               string                                                   `json:"name"`
	PrimaryChannel                     CampaignChannelType                                      `json:"primaryChannel"`
	PrimaryGoal                        CampaignWorkflowROIGoalInput                             `json:"primaryGoal"`
	StartDateInUtc                     *time.Time                                               `json:"startDateInUtc,omitempty"`
}

func (c CampaignCreateWorkflowPrimaryInput) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CampaignCreateWorkflowPrimaryInput) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *CampaignCreateWorkflowPrimaryInput) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *CampaignCreateWorkflowPrimaryInput) GetCampaignGroupID() *int64 {
	if o == nil {
		return nil
	}
	return o.CampaignGroupID
}

func (o *CampaignCreateWorkflowPrimaryInput) GetTimeZone() *string {
	if o == nil {
		return nil
	}
	return o.TimeZone
}

func (o *CampaignCreateWorkflowPrimaryInput) GetCustomCPAClickWeight() *float64 {
	if o == nil {
		return nil
	}
	return o.CustomCPAClickWeight
}

func (o *CampaignCreateWorkflowPrimaryInput) GetCustomCPAViewthroughWeight() *float64 {
	if o == nil {
		return nil
	}
	return o.CustomCPAViewthroughWeight
}

func (o *CampaignCreateWorkflowPrimaryInput) GetCustomCPAType() *CustomCPAType {
	if o == nil {
		return nil
	}
	return o.CustomCPAType
}

func (o *CampaignCreateWorkflowPrimaryInput) GetImpressionsOnlyBudgetingCpm() *float64 {
	if o == nil {
		return nil
	}
	return o.ImpressionsOnlyBudgetingCpm
}

func (o *CampaignCreateWorkflowPrimaryInput) GetBudget() *CampaignWorkflowBudgetInput {
	if o == nil {
		return nil
	}
	return o.Budget
}

func (o *CampaignCreateWorkflowPrimaryInput) GetEndDateInUtc() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndDateInUtc
}

func (o *CampaignCreateWorkflowPrimaryInput) GetSeedID() *string {
	if o == nil {
		return nil
	}
	return o.SeedID
}

func (o *CampaignCreateWorkflowPrimaryInput) GetCampaignConversionReportingColumns() []CampaignWorkflowCampaignConversionReportingColumnInput {
	if o == nil {
		return nil
	}
	return o.CampaignConversionReportingColumns
}

func (o *CampaignCreateWorkflowPrimaryInput) GetAdvertiserID() string {
	if o == nil {
		return ""
	}
	return o.AdvertiserID
}

func (o *CampaignCreateWorkflowPrimaryInput) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CampaignCreateWorkflowPrimaryInput) GetPrimaryChannel() CampaignChannelType {
	if o == nil {
		return CampaignChannelType("")
	}
	return o.PrimaryChannel
}

func (o *CampaignCreateWorkflowPrimaryInput) GetPrimaryGoal() CampaignWorkflowROIGoalInput {
	if o == nil {
		return CampaignWorkflowROIGoalInput{}
	}
	return o.PrimaryGoal
}

func (o *CampaignCreateWorkflowPrimaryInput) GetStartDateInUtc() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartDateInUtc
}
